{"mappings":"MAUaA,cAEAC,GACXC,KAAKD,SAAWA,EAEjBE,OAAOC,EAAcC,EAAkBC,IACvCC,KAAKC,EAAeC,IACpBC,eAAeC,EAAYC,WCjBhBC,GAAAA,EAAAC,IAAAA,EAAS,KAATD,EACN,MAAL,GAAA,QADWA,EAAAA,EAEP,KAAJ,GAAA,OAFWA,EAAAA,EAGN,MAAL,GAAA,QAOM,IAAIE,EAAa,CACvB,IAAKD,EAAUE,MACfC,UAAWH,EAAUI,KACrBC,WAAYL,EAAUM,aCDVC,UAAerB,cAQ1BsB,EACAC,EACAC,EAAa,CAAEC,EAAG,GAAIC,EAAG,KAEzBC,MAAML,GACNpB,KAAKqB,YAAcA,EACnBrB,KAAK0B,WAAaJ,EAClBtB,KAAK2B,YAAc,QAEnB3B,KAAK4B,YAnBW,GA0BjB3B,OAAOC,EAAc2B,EAAuBzB,GAExCJ,KAAKD,SAAS+B,EAAID,EAAgB7B,KAAK0B,WAAWH,IACnDvB,KAAKD,SAAS+B,EAAID,EAAgB7B,KAAK0B,WAAWH,GAEjDvB,KAAKD,SAAS+B,GAAK,IACrB9B,KAAKD,SAAS+B,EAAI,GAGpBzB,KAAKC,EAAeC,GAEnBA,EAAIwB,UAAY/B,KAAK2B,YACrBpB,EAAIyB,SAAShC,KAAKD,SAAS+B,EAAE9B,KAAKD,SAASkC,EAAGjC,KAAK0B,WAAWH,EAAGvB,KAAK0B,WAAWF,GACjFjB,EAAI2B,OACJ3B,EAAI4B,SAELC,oBAAoB3B,EAAaC,GAChC,IAAI2B,EAAQrC,KAAKqB,YAAYZ,GACzB4B,GAASzB,EAAUI,KACtBhB,KAAKD,SAAS+B,GAAK9B,KAAK4B,YAEdS,GAASzB,EAAUM,MAG7BlB,KAAKD,SAAS+B,GAAK9B,KAAK4B,YAERS,GAASzB,EAAUE,QACnCwB,QAAQC,IAAIF,EAAMzB,EAAUE,OAC5Bd,KAAK4B,YAAc,EAGnBlB,EAAI8B,YACJ9B,EAAI+B,OAAOzC,KAAKD,SAAS+B,EAAG9B,KAAKD,SAASkC,GAC1CvB,EAAIgC,OAAO1C,KAAKD,SAAS+B,EAAG,KAC5BpB,EAAIiC,YAAc,UACbjC,EAAIyB,iBC3DCS,UAAc9C,cAOzBsB,EAEAE,EAAa,CAAEC,EAAG,GAAIC,EAAG,KAGzBC,MAAML,GACNpB,KAAK6C,UAAYvB,EACjBtB,KAAK8C,WAAa,MAClB9C,KAAK+C,UAAW,EAChB/C,KAAKgD,WAnBU,EAmBchD,KAAK+C,UAMnC9C,OAAOC,EAAc2B,EAAuBzB,GAG3C,IAAI6C,EAAgB,CACnBnB,EAAG9B,KAAKD,SAAS+B,EAAI9B,KAAKgD,WAC1Bf,EAAGjC,KAAKD,SAASkC,GCtCI,EAAIlC,EAAgBuB,EAAaO,EAAuBzB,IAE9EL,EAAS+B,EAAID,EAAgBP,GAC7BvB,EAAS+B,EAAI,GACb/B,EAASkC,EAAI7B,GACbL,EAASkC,EAAI,EDoCTiB,CAAYD,EAAOjD,KAAK6C,UAAUtB,EAAEM,EAAgBzB,KACvDJ,KAAKD,SAAWkD,IAGdjD,KAAKD,SAAS+B,GAAID,EAAgB7B,KAAK6C,UAAUtB,EAAGvB,KAAKgD,YAAchD,KAAKD,SAAS+B,GAAI,KAE3F9B,KAAK+C,UAAY/C,KAAKD,SAAS+B,GAAID,EAAgB7B,KAAK6C,UAAUtB,EAAEvB,KAAKgD,YAAc,EAAK,EAC5FhD,KAAKgD,WAxCS,EAwCehD,KAAK+C,UAClC/C,KAAKD,SAASkC,GAAG,GAIdjC,KAAKD,SAASkC,GAAG7B,EAAiB,MACpCkC,QAAQC,IAAI,YACZvC,KAAKD,SAAS+B,EAAI,EAClB9B,KAAKD,SAASkC,EAAI,KAKrB5B,KAAKC,EAAeC,GAEnBA,EAAIwB,UAAY/B,KAAK8C,WACrBvC,EAAIyB,SAAShC,KAAKD,SAAS+B,EAAE9B,KAAKD,SAASkC,EAAGjC,KAAK6C,UAAUtB,EAAGvB,KAAK6C,UAAUrB,GAG/EjB,EAAI2B,OACJ3B,EAAI4B,gBEnEOgB,UAAkBrD,EAC9BG,UACAO,kBACAH,KAAKH,EAAeK,GACnB,MAAM6C,GAAO,EAAIlD,GAAOmD,QAAQ,GAChC9C,EAAI+C,KAAO,aACX/C,EAAIwB,UAAY,QAChBxB,EAAIgD,SAAQ,OAAQH,IAAOpD,KAAKD,SAAS+B,EAAG9B,KAAKD,SAASkC,ICD5DuB,OAAOC,OAAM,KACZ,IAAIC,EAASC,SAASC,eAAe,UACjCrD,EAAMmD,EAAOG,WAAW,MAE5BtD,EAAIwB,UAAY,OAChBxB,EAAIyB,SAAS,EAAG,EAAG0B,EAAOI,MAAOJ,EAAOK,QAKxC,IAOIC,EAAwB,CAPlB,IAAIb,EAAU,CAACrB,EAAG,EAAGG,EAAG,KACrB,IAAId,EAAO,CAAEW,EAAG,GAAIG,EAAG,KAAKpB,GAC7B,IAAI+B,EAAM,CAACd,EAAE,EAAEG,EAAE,KAGf,IAAId,EAAO,CAACW,EAAE,GAAIG,EAAEyB,EAAOK,OAAO,KAAKlD,IAIjDoD,EAAY,EAChB,MAAMC,EAAUC,IACf,IAAIjE,GAASiE,EAAOF,GAAa,IAEjCA,EAAYE,EACZH,EAAOI,SAASC,GAAMA,EAAEpE,OAAOC,EAAMwD,EAAOI,MAAMJ,EAAOK,UAEzDxD,EAAI+D,UAAU,EAAG,EAAGZ,EAAOI,MAAOJ,EAAOK,QACzCxD,EAAIwB,UAAY,OAChBxB,EAAIyB,SAAS,EAAG,EAAG0B,EAAOI,MAAOJ,EAAOK,QAExCC,EAAOI,SAASC,IAEfA,EAAEhE,KAAKH,EAAOK,MAIfiD,OAAOe,sBAAsBL,IAG9BV,OAAOe,sBAAsBL,GAE7BP,SAASa,KAAKC,iBAAiB,WAAYJ,IAE1CL,EAAOI,SAASM,IACXA,EAAMtC,qBACTsC,EAAMtC,oBAAoBiC,EAAE5D,IAAIF","sources":["src/actors/Actor.ts","src/utils/KeyboardMap.ts","src/actors/Canyon.ts","src/actors/Enemy.ts","src/utils/CheckLimits.ts","src/actors/FPSViewer.ts","src/script.ts"],"sourcesContent":["import { Point } from \"../types/Point\";\n\nexport interface IActor {\n\tposition?: Point;\n\tupdate: (delta: number,sizeCanvas:number,sizeCanvasHeight:number) => void;\n\tkeyboard_event_down?: (key: string, ctx: CanvasRenderingContext2D) => void;\n\tkeyboard_event_up?: (key: string) => void;\n\tdraw: (delta: number, ctx: CanvasRenderingContext2D) => void;\n}\n\nexport class Actor implements IActor {\n\tposition: Point;\n\tconstructor(position: Point) {\n\t\tthis.position = position;\n\t}\n\tupdate(delta: number,sizeCanvas:number,sizeCanvasHeight:number) { }\n\tdraw(delta: number, ctx: CanvasRenderingContext2D) { }\n\tkeyboard_event(key: string,ctx: CanvasRenderingContext2D) { }\n}","export enum CanyonKey {\n\tSPACE,\n\tLEFT,\n\tRIGHT,\n}\n\nexport interface KeyboardMap {\n\t[key: string]: CanyonKey;\n}\n\nexport let MoveCanyon = {\n\t\" \": CanyonKey.SPACE,\n\tArrowLeft: CanyonKey.LEFT,\n\tArrowRight: CanyonKey.RIGHT,\n\n};","import { Actor, IActor } from \"./Actor\";\nimport { Point } from \"../types/Point\";\n\nimport { checkLimits } from \"../utils/CheckLimits\";\nimport { CanyonKey, KeyboardMap } from \"../utils/KeyboardMap\";\nimport { convertToObject } from \"typescript\";\n//const ferrariImg = require(\"../assets/ferrari.png\");\n\ntype Size = { w: number; h: number };\n\nlet canyonSpeed = 15;\n\nexport class Canyon extends Actor implements IActor {\n\tcanyonSize: Size;\n\tcanyonColor: string;\n\t\n\tcanyonSpeed: number;\n\t\n\tkeyboardMap: KeyboardMap;\n\tconstructor(\n\t\tinitialPos: Point,\n\t\tkeyboardMap: KeyboardMap,\n\t\tsize: Size = { w: 50, h: 50 },\n\t) {\n\t\tsuper(initialPos);\n\t\tthis.keyboardMap = keyboardMap;\n\t\tthis.canyonSize = size;\n\t\tthis.canyonColor = \"green\";\n\t\n\t\tthis.canyonSpeed = canyonSpeed;\n\t\t\n\n\t\t// TODO: Canyon image\n\t\t// this.image = new Image();\n\t\t// this.image.src = ferrariImg;\n\t}\n\tupdate(delta: number,sizeCanvasWidth:number,sizeCanvasHeight:number) {\n\t\n\t\tif(this.position.x > sizeCanvasWidth-this.canyonSize.w){\n\t\t\t\tthis.position.x = sizeCanvasWidth-this.canyonSize.w;\t\n\t\t}\t\n\t\tif(this.position.x <= 0){\n\t\t\tthis.position.x = 5;\t\n\t}\t\n\t}\n\tdraw(delta: number, ctx: CanvasRenderingContext2D) {\n\t\n\t\tctx.fillStyle = this.canyonColor;\n\t\tctx.fillRect(this.position.x,this.position.y, this.canyonSize.w, this.canyonSize.h);\n\t\tctx.fill();\n\t\tctx.stroke();\n\t}\n\tkeyboard_event_down(key: string, ctx: CanvasRenderingContext2D) {\n\t\tlet tecla = this.keyboardMap[key];\n\t\tif (tecla == CanyonKey.LEFT) {\n\t\t\tthis.position.x -= this.canyonSpeed\n\t\t\t\n\t\t} else if (tecla == CanyonKey.RIGHT) {\n\t\t\t\n\t\t\t//this.canyonSpeed += 4;\n\t\t\tthis.position.x += this.canyonSpeed\n\t\t\t\n        } else if (tecla == CanyonKey.SPACE){\n\t\t\tconsole.log(tecla,CanyonKey.SPACE)\n\t\t\tthis.canyonSpeed = 0;\n\t\t\t//TODO: función disparo\n\n\t\t\tctx.beginPath();  \n\t\t\tctx.moveTo(this.position.x, this.position.y);    \n\t\t\tctx.lineTo(this.position.x, 900);  \n\t\t\tctx.strokeStyle = '#ff0000';\n      \t\tctx.stroke();\n\t\t\n\t\t\t\n\n\t\t}\n\t}\n\t// keyboard_event_up(key: string) {\n\t// \tlet tecla = this.keyboardMap[key];\n\t// \tif (tecla == Carkey.UP) {\n\t// \t\tthis.carAcceleration = 0;\n\t// \t} else if (tecla == Carkey.DOWN) {\n\t// \t\tthis.carAcceleration = 0;\n\t// \t}\n\t// }\n}","import { Actor, IActor } from \"./Actor\";\nimport { Point } from \"../types/Point\";\nimport { checkLimits } from \"../utils/CheckLimits\";\n//import { CanyonKey, KeyboardMap } from \"../utils/KeyboardMap\";\n\n//const ferrariImg = require(\"../assets/ferrari.png\");\n\ntype Size = { w: number; h: number };\n// Aquí podemos cambiar la velocidad del enemigo.\nlet speedEnemy = 6;\n\n\nexport class Enemy extends Actor implements IActor {\n\tenemySize: Size;\n\tenemyColor: string;\n\t\n\tenemySpeed: number;\n\tdirection: number;\n\tconstructor(\n\t\tinitialPos: Point,\n\t\t\n\t\tsize: Size = { w: 50, h: 50 },\n\t) {\n\t\t\n\t\tsuper(initialPos);\n\t\tthis.enemySize = size;\n\t\tthis.enemyColor = \"red\";\n\t\tthis.direction= 1;\n\t\tthis.enemySpeed = speedEnemy*this.direction; \n\n\t\t// TODO: imagen enemy\n\t\t// this.image = new Image();\n\t\t// this.image.src = ferrariImg;\n\t}\n\tupdate(delta: number,sizeCanvasWidth:number,sizeCanvasHeight:number) {\n\t\t\n\t\t\n\t\tlet newPos: Point = {\n\t\t\tx: this.position.x + this.enemySpeed,\n\t\t\ty: this.position.y,\n\t\t};\n\t\t\n\t\tif (checkLimits(newPos,this.enemySize.w,sizeCanvasWidth,sizeCanvasHeight)) {\n\t\t\tthis.position = newPos;\t \n\t\t\t        \n\t\t}\n\t\tif(this.position.x >=sizeCanvasWidth-this.enemySize.w- this.enemySpeed || this.position.x <=1){\n\t\t\n\t\t\tthis.direction = this.position.x >=sizeCanvasWidth-this.enemySize.w-this.enemySpeed  ? -1 : 1\n\t\t\tthis.enemySpeed = speedEnemy*this.direction;\n\t\t\tthis.position.y+=50;\n\t\t\n\t\t\t//TODO: Aquí iría una game over si el enemigo llega a la altura de las barreras\n\t\t\t//TODO: Podría poner GAMER OVER, pulse ENTER para empezar\n\t\t\tif(this.position.y>=sizeCanvasHeight-300){\n\t\t\t\tconsole.log(\"Perdiste\")\n\t\t\t\tthis.position.x = 1\n\t\t\t\tthis.position.y = 40\n\n\t\t\t}\n\t\t}\n\t}\n\tdraw(delta: number, ctx: CanvasRenderingContext2D) {\n\t\n\t\tctx.fillStyle = this.enemyColor;\n\t\tctx.fillRect(this.position.x,this.position.y, this.enemySize.w, this.enemySize.h);\n\n\t\t\n\t\tctx.fill();\n\t\tctx.stroke();\n\t}\n\n}","import { Point } from \"../types/Point\";\nexport const checkLimits = (position: Point,size :number,sizeCanvasWidth:number,sizeCanvasHeight:number) => {\n\tif (\n\t\tposition.x < sizeCanvasWidth-size && //1020\n\t\tposition.x > 0 &&\n\t\tposition.y < sizeCanvasHeight &&\n\t\tposition.y > 0\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n};","import { Actor } from \"./Actor\";\n\nexport class FPSViewer extends Actor {\n\tupdate() {}\n\tkeyboard_event() {}\n\tdraw(delta: number, ctx: CanvasRenderingContext2D) {\n\t\tconst fps = (1 / delta).toFixed(2);\n\t\tctx.font = \"15px Arial\";\n\t\tctx.fillStyle = \"white\";\n\t\tctx.fillText(`FPS:${fps}`, this.position.x, this.position.y);\n\t}\n}","import { Actor, IActor } from \"./actors/Actor\";\n\nimport {Canyon} from \"./actors/Canyon\"\nimport {Enemy} from \"./actors/Enemy\"\nimport { FPSViewer } from \"./actors/FPSViewer\";\nimport { MoveCanyon } from \"./utils/KeyboardMap\";\n\n\nwindow.onload = () => {\n\tvar canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n\tvar ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\t\n\tctx.fillStyle = \"gray\";\n\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\n\n\t\n\n\tlet fps = new FPSViewer({x: 5, y: 15 });\n\tlet canyon = new Canyon({ x: 30, y: 965},MoveCanyon); \n\tlet enemy = new Enemy({x:1,y:40})\n\n\t//TODO: Hacer las barreras decentemente 3 por lo menos\n\tlet barrier = new Canyon({x:30, y:canvas.height-250},MoveCanyon)\n\t\n\tlet actors: Array<IActor> = [fps,canyon,enemy,barrier];\n\n\tlet lastFrame = 0;\n\tconst render = (time: number) => {\n\t\tlet delta = (time - lastFrame) / 1000;\n\n\t\tlastFrame = time;\n\t\tactors.forEach((e) => e.update(delta,canvas.width,canvas.height));\n\t\t\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\tctx.fillStyle = \"gray\";\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\n\t\tactors.forEach((e) => {\n\t\t\t//ctx.save();\n\t\t\te.draw(delta, ctx);\n\t\n\t\t\t//ctx.restore();\n\t\t});\n\t\twindow.requestAnimationFrame(render);\n\t};\n\n\twindow.requestAnimationFrame(render);\n\n\tdocument.body.addEventListener(\"keydown\", (e) => {\n\t\t\n\t\tactors.forEach((actor) => {\n\t\t\tif (actor.keyboard_event_down) {\n\t\t\t\tactor.keyboard_event_down(e.key,ctx);\n\t\t\t\t\n\t\t\t}\n\t\t});\n\t});\n\t// document.body.addEventListener(\"keyup\", (e) => {\n\t// \t// console.log(e.key);\n\t// \tactors.forEach((actor) => {\n\t// \t\tif (actor.keyboard_event_up) {\n\t// \t\t\tactor.keyboard_event_up(e.key);\n\t// \t\t}\n\t// \t});\n\t// });\n};"],"names":["$8235678231353d24$export$f73d3eb6fd876d80","position","this","update","delta","sizeCanvas","sizeCanvasHeight","draw","delta1","ctx","keyboard_event","key","ctx1","CanyonKey","$abcda7ef8f1c398c$export$616b37de796fd680","$abcda7ef8f1c398c$export$ad0e2730ff0dc205","SPACE","ArrowLeft","LEFT","ArrowRight","RIGHT","$14165d7de5a795ee$export$5dab6e7cfd997c5","initialPos","keyboardMap","size","w","h","super","canyonSize","canyonColor","canyonSpeed","sizeCanvasWidth","x","fillStyle","fillRect","y","fill","stroke","keyboard_event_down","tecla","console","log","beginPath","moveTo","lineTo","strokeStyle","$62aec6477a8e486e$export$eefe978c73a9a6","enemySize","enemyColor","direction","enemySpeed","newPos","$a5901cdfe966c2d4$export$b427d64c03133802","$37691bb6273e74a0$export$13acb86b4b3ca30e","fps","toFixed","font","fillText","window","onload","canvas","document","getElementById","getContext","width","height","actors","lastFrame","render","time","forEach","e","clearRect","requestAnimationFrame","body","addEventListener","actor"],"version":3,"file":"index.4f915dcf.js.map"}